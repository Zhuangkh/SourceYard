<Project>

  <ItemGroup Condition="$(DisableSourcePackageAutoPrivateAssets) != 'true'">
	  <!-- 用于修复设置了 DevelopmentDependency 将不自动添加依赖 -->
	  <!-- 参阅 https://github.com/dotnet-campus/SourceYard/issues/112 -->
	  <PackageReference Update="#(PackageId)">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>all</IncludeAssets>
    </PackageReference>
  </ItemGroup>

  <PropertyGroup>
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
  </PropertyGroup>

  <!-- 在调试下的路径是不存在的 -->
  <Import Project="..\build\Core.targets" Condition="Exists('..\build\Core.targets')" />
  <!-- 只有调试下在存在此文件 -->
  <Import Project="..\Core.targets" Condition="Exists('..\Core.targets')" />

  <!-- 单框架项目入口 -->
  <Target Name="BuildSourceNuGet" AfterTargets="Build"
          Condition="$(PackSource) != 'False' And '$(TargetFrameworks)' == '' ">
    <Message Text="单框架项目，源代码打包第一步：" />
    <CallTarget Targets="SourceYardStep1" />
    <Message Text="单框架项目，源代码打包第二步：" />
    <CallTarget Targets="SourceYardStep2" />
    <Message Text="单框架项目，源代码打包第三步：" />
    <CallTarget Targets="SourceYardStep3" />
  </Target>
  
  <!-- 多框架项目入口 -->
  <Target Name="BuildSourceNuGetForMultiTargeting" AfterTargets="Build"
          Condition="$(PackSource) != 'False' And '$(TargetFrameworks)' != '' ">
    <Message Text="多框架项目，源代码打包第一步（$(TargetFramework)）：" />
    <CallTarget Targets="SourceYardStep1" />
    <Message Text="多框架项目，源代码打包第二步（$(TargetFramework)）：" />
    <CallTarget Targets="SourceYardStep2" />
  </Target>

</Project>