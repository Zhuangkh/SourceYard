<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <!-- Project building properties -->
    <OutputType>Exe</OutputType>
    <TargetFrameworks>net45;netcoreapp2.0</TargetFrameworks>
    <LangVersion>latest</LangVersion>

    <!-- NuGet package properties -->
    <Version>0.1.3501-alpha</Version>
    <Authors>dotnet-campus</Authors>
    <Company>dotnet-campus</Company>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <Description>Add a NuGet package only for dll reference? By using dotnetCampus.SourceYard, you can pack a NuGet package with source code. By installing the new source code package, all source codes behaviors just like it is in your project.</Description>
    <Copyright>Copyright (c) 2018 dotnet-campus</Copyright>
    <PackageLicenseUrl>https://github.com/dotnet-campus/dotnetCampus.SourceYard/blob/master/LICENSE</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/dotnet-campus/dotnetCampus.SourceYard</PackageProjectUrl>
    <RepositoryUrl>https://github.com/dotnet-campus/dotnetCampus.SourceYard.git</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>source;dotnet;nuget;msbuild</PackageTags>
  </PropertyGroup>
  
  <PropertyGroup>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <NoPackageAnalysis>true</NoPackageAnalysis>
    <DevelopmentDependency>true</DevelopmentDependency>
    <!-- 因为只把主软件复制过去，依赖的库没有复制，所以不使用这个方法 -->
    <!-- 在下面可以看到使用的是复制整个文件夹 -->
    <!--<BuildOutputTargetFolder>tools</BuildOutputTargetFolder>-->
  </PropertyGroup>

  <ItemGroup>
    <None Remove="*.DotSettings" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Properties\" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="CommandLineParser" Version="2.2.1" />
   
  </ItemGroup>

  <ItemGroup Condition="$(TargetFramework)=='net45'">
    <PackageReference Include="System.ValueTuple" Version="4.5" />
  </ItemGroup>

  <ItemGroup>
    <!--所有的 NuGet 包资产都声明成私有的-->
    <PackageReference Update="@(PackageReference)" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup>
    <!--复制打包用到文件-->
    <None Update="Assets\Target\**\*">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <ItemGroup>
    <!--指定自己的在安装 nuget 时修改编译-->
    <None Include="Assets\Current\**" Pack="True" PackagePath="build\" />
    <None Include="Assets\README.md" Pack="True" PackagePath="" />
    <None Include="$(OutputPath)**\**" Pack="True" PackagePath="tools\" />
  </ItemGroup>

</Project>
